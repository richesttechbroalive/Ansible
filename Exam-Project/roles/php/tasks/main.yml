- name: Upgrade System
  apt: upgrade=dist update_cache=yes

- name: Add php repository
  apt_repository:
   repo: 'ppa:ondrej/php'

- name: Install PHP MB
  apt: name=php{{php_version}}-mbstring state=latest

- name: Install PHP XML
  apt: name=php-xml state=latest

- name: Install PHP
  apt: name=php{{php_version}} state=latest

- name: Install unzip
  apt: name=unzip state=latest

- name: Download php-composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/installer

- name: install composer
  shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
  args:
    creates: /usr/local/bin/composer

- name: rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  args:
    creates: /usr/local/bin/composer

- name: make composer executable
  file: 
    path: /usr/local/bin/composer
    mode: a+x
    state: file

- name: install apache2 server
  apt:
     name: apache2
     state: present

- name: install php 8.0 repo
  shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list
  shell: sudo apt update -y
  shell: sudo apt install -y php8.0-common php8.0-cli -y

- name: install lamp stack
  apt:
    pkg:
      - php8.0-mysql
      - php8.0-curl
      - php8.0-cgi
      - php8.0-xsl
      - php8.0-gd
      - php8.0-mbstring
      - php8.0-zip
      - php8.0-xmlrpc
      - php8.0-soap
      - php8.0-intl
      - libapache2-mod-php
    state: present
    update_cache: yes 

- name: install python, pip etc
  shell: apt-get -y install "{{ item }}"
  with_items:
    - pip 
    - python3-dev 
    - default-libmysqlclient-dev 
    - build-essential

- name: Install MySQL server
  shell: apt-get -y install mysql-server

- name: Install MySQL client
  shell: apt-get -y install mysql-client

- name: pip install mysqlclient
  shell: pip install mysqlclient

- name: Start the MySQL service
  action: service name=mysql state=started

- name: create mysql db
  mysql_db: name=database1 state=present

- name: create user mysql
  mysql_user: name=database1 password=database1 priv=database1.*:ALL host='%' state=present

- name: remove gitlaravel
  shell: sudo rm -rf /var/www/html/{{ server_name }}/

- name: checkout latest code from github
  git: >
    repo=https://github.com/f1amy/laravel-realworld-example-app.git
    dest=/opt/{{ server_name }}
    force=yes
    accept_hostkey=yes

- name: move laravelrepo
  shell: sudo mv -f /opt/{{ server_name }} /var/www/html/

- name: copy bash script to location
  template: src=bash dest="/var/www/html/{{ server_name }}/bashscript.sh"
  
- name: run bash script
  shell: sh /var/www/html/{{ server_name }}/bashscript.sh -y
  
- name: permission for composer install
  shell: sudo chmod -R 777 /var/www/html/{{ server_name }}/

- name: remove default webphp from routes
  shell: sudo rm -rf /var/www/html/{{ server_name }}/routes/web.php

- name: create web.php in routes
  template: src=webfile dest="/var/www/html/{{ server_name }}/routes/web.php"

- name: "Composer install"
  become: false
  composer:
    command: install 
    global_command: false  
    working_dir: /var/www/html/{{ server_name }}/

#- name: "Composer update"
#  become: false
#  composer:
#    command: update 
#    global_command: false  
#    working_dir: /var/www/html/{{ server_name }}/

- name: Change permission
  shell: sudo chown -R www-data:www-data /var/www/html/{{ server_name }}/

- name: Change permission for storage
  shell: sudo chmod -R 775 /var/www/html/{{ server_name }}/storage

- name: Create .env file for database
  template: src=env.example dest="/var/www/html/{{ server_name }}/.env"

- name: To change artisan file permission
  shell: sudo chmod 777 /var/www/html/{{ server_name }}/artisan

- name: To generate artisan key
  shell: php /var/www/html/{{ server_name }}/artisan key:generate

- name: start mysql service
  service: name=mysql state=restarted

- name: install mysql driver
  shell: sudo apt-get install php-mysql -y

- name: install sqlite
  shell: sudo apt-get install php-sqlite3 -y

- name: update and upgrade
  shell: sudo apt update && sudo apt upgrade -y

- name: clear cache
  shell: sudo systemctl reload apache2

- name: run migration
  shell: sudo php /var/www/html/{{ server_name }}/artisan migrate

- name: Remove default apache server config from sites-enabled
  file: name=/etc/apache2/sites-enabled/000-default.conf state=absent

- name: Create apache server for  domain
  template: src=webconf dest="/etc/apache2/sites-available/{{ server_name }}.conf" 

- name: permission for laravel conf file
  shell: sudo chmod -R 777 /etc/apache2/sites-available/{{ server_name }}.conf

- name: Update a2ensite
  command: a2ensite {{ server_name }}

- name: Enable the Apache rewrite module
  command:  a2enmod rewrite

  notify:
    - restart apache2